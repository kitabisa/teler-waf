on:
  push:
    branches:
      - master
    paths:
      - "**.go"
      - "go.mod"
  pull_request:
    branches:
      - "**"
    paths:
      - "**.go"
      - "go.mod"
  workflow_dispatch:

name: tests
jobs:
  tests:
    strategy:
      matrix:
        go-version: [1.19.x, 1.20.x, 1.21.x, 1.22.x]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache-dependency-path: '**/go.sum'
      - run: echo "date=$(date +%d%m%Y)" >> "$GITHUB_OUTPUT"
        id: cache
      - uses: actions/cache@v4
        id: teler-resources
        with:
          path: ~/.cache/teler-waf
          key: teler-resources-${{ steps.cache.outputs.date }}
          restore-keys: teler-resources-${{ steps.cache.outputs.date }}-
      - run: cp -a ~/.cache/teler-waf/ /tmp/.teler-resources-${{ steps.cache.outputs.date }}
        if: steps.teler-resources.outputs.cache-hit == 'true'
      - run: make ci
        if: (github.event_name != 'workflow_dispatch')

  codecov:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache-dependency-path: '**/go.sum'
      - run: make cover-all
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage.txt
          verbose: true
          fail_ci_if_error: true

  golangci:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          args: --timeout=5m
        
  semgrep:
    runs-on: ubuntu-latest
    needs: tests
    container:
      image: returntocorp/semgrep
    if: (github.actor != 'dependabot[bot]')
    steps:
      - uses: actions/checkout@v3
      - run: semgrep ci
        env:
           SEMGREP_RULES: auto

  codeql:
    needs: tests
    uses: ./.github/workflows/codeql.yaml

  bearer:
    needs: tests
    uses: ./.github/workflows/bearer.yaml
    with:
      diff: ${{ github.event_name == 'pull_request' && true || false }}

  regression:
    needs: tests
    uses: ./.github/workflows/regression.yaml

  license-verify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - run: go install -v github.com/palantir/go-license@latest
      - run: make license-verify

  dependency-review:
    if: (github.event_name == 'pull_request')
    uses: ./.github/workflows/dependency-review.yaml
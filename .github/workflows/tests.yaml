on:
  push:
    branches:
      - master
    paths:
      - "**.go"
      - "go.mod"
  pull_request:
    branches:
      - "**"
    paths:
      - "**.go"
      - "go.mod"
  workflow_dispatch:

name: tests
jobs:
  tests:
    strategy:
      matrix:
        go-version: [1.19.x, 1.20.x, 1.21.x]
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Test
        run: make ci

  codecov:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - uses: actions/setup-go@v4
        with:
          go-version: 'stable'
      - run: make cover
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: /tmp/teler-coverage.out
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  golangci:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          args: --timeout=5m
        
  semgrep:
    runs-on: ubuntu-latest
    needs: tests
    container:
      image: returntocorp/semgrep
    if: (github.actor != 'dependabot[bot]')
    steps:
      - uses: actions/checkout@v3
      - run: semgrep ci
        env:
           SEMGREP_RULES: auto

  codeql:
    needs: tests
    uses: ./.github/workflows/codeql.yaml

  regression:
    needs: tests
    uses: ./.github/workflows/regression.yaml

  license-verify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - uses: actions/setup-go@v4
        with:
          go-version: 'stable'
      - run: go install -v github.com/palantir/go-license@latest
      - run: make license-verify
